[project]
name = "stac-fastapi"
version = "6.1.0"
description = "Python library for building a STAC-compliant FastAPI application."
requires-python = ">=3.9"
readme = "README.md"
dependencies = [
    "stac-fastapi-api",
    "stac-fastapi-types",
    "stac-fastapi-extensions",
]

[tool.uv]
package = false

[tool.uv.sources]
stac-fastapi-types = { workspace = true }
stac-fastapi-extensions = { workspace = true }
stac-fastapi-api = { workspace = true }

[tool.uv.workspace]
members = [
  "stac_fastapi/*"
]

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-benchmark",
    "pre-commit",
    "bump-my-version",
    "httpx",
    "requests",
]
docs = [
    "black>=23.10.1",
    "mkdocs>=1.4.3",
    "mkdocs-jupyter>=0.24.5",
    "mkdocs-material[imaging]>=9.5",
    "griffe-inherited-docstrings>=1.0.0",
    "mkdocstrings[python]>=0.25.1",
]

[tool.ruff]
target-version = "py39" # minimum supported version
line-length = 90

[tool.ruff.lint]
select = [
    "C9",
    "D1",
    "E",
    "F",
    "I",
    "W",
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = ["D1"]

[tool.ruff.lint.isort]
known-first-party = ["stac_fastapi"]
known-third-party = ["stac_pydantic", "fastapi"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
exclude = ["tests", ".venv"]

[tool.bumpversion]
current_version = "6.1.0"
parse = """(?x)
    (?P<major>\\d+)\\.
    (?P<minor>\\d+)\\.
    (?P<patch>\\d+)
    (?:
        (?P<pre_l>a|b|rc)   # pre-release label
        (?P<pre_n>\\d+)     # pre-release version number
    )?                      # pre-release section is optional
    (?:
        \\.post
        (?P<post_n>\\d+)    # post-release version number
    )?                      # post-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}.post{post_n}",
    "{major}.{minor}.{patch}{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]

search = "{current_version}"
replace = "{new_version}"
regex = false
tag = false
commit = true

[[tool.bumpversion.files]]
filename = "VERSION"
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "stac_fastapi/api/stac_fastapi/api/version.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "stac_fastapi/extensions/stac_fastapi/extensions/version.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "stac_fastapi/types/stac_fastapi/types/version.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
